/* tslint:disable */
export const memory: WebAssembly.Memory;
export function malloc(a: number): number;
export function calloc(a: number, b: number): number;
export function free(a: number): void;
export function __errno_location(): number;
export function strlen(a: number): number;
export function strchr(a: number, b: number): number;
export function strncmp(a: number, b: number, c: number): number;
export function js_random_uint32(): number;
export function emscripten_asm_const_int(a: number, b: number, c: number): number;
export function __assert_fail(a: number, b: number, c: number, d: number): void;
export function abort(): void;
export function init_env(): void;
export function __wbg_repo_free(a: number): void;
export function repo_new(): number;
export function repo_open(a: number, b: number, c: number, d: number, e: number): void;
export function repo_close(a: number): void;
export function repo_put(): number;
export function repo_request(): number;
export function __wbindgen_malloc(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
export function sodium_free(a: number): void;
export function sodium_init(): number;
export function crypto_core_salsa20(a: number, b: number, c: number, d: number): number;
export function crypto_core_salsa20_outputbytes(): number;
export function crypto_core_salsa20_inputbytes(): number;
export function crypto_core_salsa20_keybytes(): number;
export function crypto_core_salsa20_constbytes(): number;
export function crypto_generichash_blake2b(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function crypto_generichash_blake2b_salt_personal(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function crypto_generichash_blake2b_init(a: number, b: number, c: number, d: number): number;
export function crypto_generichash_blake2b_init_salt_personal(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function crypto_generichash_blake2b_update(a: number, b: number, c: number): number;
export function crypto_generichash_blake2b_final(a: number, b: number, c: number): number;
export function crypto_onetimeauth_poly1305(a: number, b: number, c: number, d: number): number;
export function crypto_onetimeauth_poly1305_verify(a: number, b: number, c: number, d: number): number;
export function crypto_onetimeauth_poly1305_init(a: number, b: number): number;
export function crypto_onetimeauth_poly1305_update(a: number, b: number, c: number): number;
export function crypto_onetimeauth_poly1305_final(a: number, b: number): number;
export function crypto_onetimeauth_poly1305_bytes(): number;
export function crypto_onetimeauth_poly1305_keybytes(): number;
export function crypto_onetimeauth_poly1305_statebytes(): number;
export function crypto_onetimeauth_poly1305_keygen(a: number): void;
export function crypto_scalarmult_curve25519(a: number, b: number, c: number): number;
export function crypto_scalarmult_curve25519_base(a: number, b: number): number;
export function crypto_scalarmult_curve25519_bytes(): number;
export function crypto_scalarmult_curve25519_scalarbytes(): number;
export function crypto_stream_chacha20_keybytes(): number;
export function crypto_stream_chacha20_noncebytes(): number;
export function crypto_stream_chacha20_messagebytes_max(): number;
export function crypto_stream_chacha20_ietf_keybytes(): number;
export function crypto_stream_chacha20_ietf_noncebytes(): number;
export function crypto_stream_chacha20_ietf_messagebytes_max(): number;
export function crypto_stream_chacha20(a: number, b: number, c: number, d: number): number;
export function crypto_stream_chacha20_ietf(a: number, b: number, c: number, d: number): number;
export function crypto_stream_chacha20_xor_ic(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function crypto_stream_chacha20_ietf_xor_ic(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function crypto_stream_chacha20_xor(a: number, b: number, c: number, d: number, e: number): number;
export function crypto_stream_chacha20_ietf_xor(a: number, b: number, c: number, d: number, e: number): number;
export function crypto_stream_chacha20_ietf_keygen(a: number): void;
export function crypto_stream_chacha20_keygen(a: number): void;
export function crypto_stream_salsa20_keybytes(): number;
export function crypto_stream_salsa20_noncebytes(): number;
export function crypto_stream_salsa20_messagebytes_max(): number;
export function crypto_stream_salsa20(a: number, b: number, c: number, d: number): number;
export function crypto_stream_salsa20_xor_ic(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function crypto_stream_salsa20_xor(a: number, b: number, c: number, d: number, e: number): number;
export function crypto_stream_salsa20_keygen(a: number): void;
export function crypto_verify_16_bytes(): number;
export function crypto_verify_32_bytes(): number;
export function crypto_verify_64_bytes(): number;
export function crypto_verify_16(a: number, b: number): number;
export function crypto_verify_32(a: number, b: number): number;
export function crypto_verify_64(a: number, b: number): number;
export function randombytes_set_implementation(a: number): number;
export function randombytes_implementation_name(): number;
export function randombytes_random(): number;
export function randombytes_stir(): void;
export function randombytes_uniform(a: number): number;
export function randombytes_buf(a: number, b: number): void;
export function randombytes_buf_deterministic(a: number, b: number, c: number): void;
export function randombytes_seedbytes(): number;
export function randombytes_close(): number;
export function randombytes(a: number, b: number): void;
export function sodium_memzero(a: number, b: number): void;
export function sodium_misuse(): void;
export function sodium_is_zero(a: number, b: number): number;
export function sodium_set_misuse_handler(a: number): number;
export function sodium_runtime_has_neon(): number;
export function sodium_runtime_has_sse2(): number;
export function sodium_runtime_has_sse3(): number;
export function sodium_runtime_has_ssse3(): number;
export function sodium_runtime_has_sse41(): number;
export function sodium_runtime_has_avx(): number;
export function sodium_runtime_has_avx2(): number;
export function sodium_runtime_has_avx512f(): number;
export function sodium_runtime_has_pclmul(): number;
export function sodium_runtime_has_aesni(): number;
export function sodium_runtime_has_rdrand(): number;
export function sodium_stackzero(a: number): void;
export function sodium_memcmp(a: number, b: number, c: number): number;
export function sodium_compare(a: number, b: number, c: number): number;
export function sodium_increment(a: number, b: number): void;
export function sodium_add(a: number, b: number, c: number): void;
export function sodium_mlock(a: number, b: number): number;
export function sodium_munlock(a: number, b: number): number;
export function sodium_malloc(a: number): number;
export function sodium_allocarray(a: number, b: number): number;
export function sodium_mprotect_noaccess(a: number): number;
export function sodium_mprotect_readonly(a: number): number;
export function sodium_mprotect_readwrite(a: number): number;
export function sodium_pad(a: number, b: number, c: number, d: number, e: number): number;
export function sodium_unpad(a: number, b: number, c: number, d: number): number;
